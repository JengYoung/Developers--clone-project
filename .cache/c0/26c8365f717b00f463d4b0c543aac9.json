{"id":"src/Throttle.ts","dependencies":[{"name":"D:\\developers\\tsconfig.json","includedInParent":true,"mtime":1624940544634},{"name":"D:\\developers\\package.json","includedInParent":true,"mtime":1624961197461}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar timer;\n\nvar throttle = function throttle(cb) {\n  return function () {\n    var _arguments = arguments;\n\n    if (!timer) {\n      timer = setTimeout(function () {\n        cb.apply(void 0, _toConsumableArray(_arguments));\n        timer = null;\n      }, 300);\n    }\n  };\n};\n\nvar _default = throttle;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"src/Throttle.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":1,"column":4},"generated":{"line":20,"column":4}},{"source":"src/Throttle.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":9}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":22,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":6},"generated":{"line":22,"column":4}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":14},"generated":{"line":22,"column":12}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":26},"generated":{"line":22,"column":15}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":6},"generated":{"line":22,"column":24}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":26},"generated":{"line":22,"column":32}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":36},"generated":{"line":22,"column":33}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":26},"generated":{"line":22,"column":35}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":43},"generated":{"line":22,"column":37}},{"source":"src/Throttle.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":23,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":23,"column":9}},{"source":"src/Throttle.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":23,"column":21}},{"source":"src/Throttle.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":24,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":26,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":4,"column":12},"generated":{"line":26,"column":8}},{"source":"src/Throttle.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":26,"column":9}},{"source":"src/Throttle.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":26,"column":14}},{"source":"src/Throttle.ts","name":null,"original":{"line":4,"column":20},"generated":{"line":26,"column":16}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":27,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":27,"column":6}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":17},"generated":{"line":27,"column":11}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":27,"column":14}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":27,"column":24}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":27,"column":25}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":36},"generated":{"line":27,"column":37}},{"source":"src/Throttle.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":28,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":28,"column":8}},{"source":"src/Throttle.ts","name":null,"original":{"line":8,"column":18},"generated":{"line":28,"column":10}},{"source":"src/Throttle.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":28,"column":16}},{"source":"src/Throttle.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":28,"column":44}},{"source":"src/Throttle.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":28,"column":54}},{"source":"src/Throttle.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":29,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":29,"column":8}},{"source":"src/Throttle.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":29,"column":13}},{"source":"src/Throttle.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":29,"column":16}},{"source":"src/Throttle.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":29,"column":20}},{"source":"src/Throttle.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":30,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":30,"column":7}},{"source":"src/Throttle.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":30,"column":9}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":30,"column":12}},{"source":"src/Throttle.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":30,"column":13}},{"source":"src/Throttle.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":31,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":32,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":32,"column":3}},{"source":"src/Throttle.ts","name":null,"original":{"line":13,"column":1},"generated":{"line":33,"column":0}},{"source":"src/Throttle.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":33,"column":1}},{"source":"src/Throttle.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":35,"column":15}}],"sources":{"src/Throttle.ts":"let timer: number;\r\nconst throttle:Function = function (cb: any) {\r\n    return function () {\r\n        if (!timer) {\r\n            // setTimeout을 이용하여 설정한 주기마다 콜백이 실행될 수 있도록 하였고,\r\n            // 실행이 끝난 후에는 다시 throttleCheck를 false로 만들어 주어, 설정한 주기마다 이벤트가 한 번씩만 호출되도록 하였습니다.\r\n            timer = setTimeout(() => {\r\n                cb(...arguments);\r\n                timer = null;\r\n            }, 300);\r\n        }\r\n    }\r\n}\r\nexport default throttle;"},"lineCount":null}},"error":null,"hash":"d3421299899f571d29d5e2414acb2ec5","cacheData":{"env":{}}}